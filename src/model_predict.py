# -*- coding: utf-8 -*-
"""predict.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1WdYfEcSY2UtMfBhL1DpUwVVmHQKf2c6_
"""

# Função para pré-processamento e vetorização do texto
def preprocess_text(text, tokenizer, max_sequence_length):
    # Tokenização do texto
    tokenized_text = tokenizer.texts_to_sequences([text])

    # Padding para garantir que todas as sequências tenham o mesmo comprimento
    padded_text = pad_sequences(tokenized_text, maxlen=max_sequence_length, padding='post')

    # Retorne o texto pré-processado e vetorizado
    return padded_text

# Função para fazer previsões com o modelo
def predict_class(model, text, tokenizer, max_sequence_length):
    # Pré-processar e vetorizar o texto
    processed_text = preprocess_text(text, tokenizer, max_sequence_length)

    # Fazer previsões usando o modelo
    predictions = model.predict(processed_text)

    # Decodificar as previsões em rótulos de classe (se necessário)
    # Por exemplo, você pode ter um dicionário que mapeia índices de previsão para rótulos de classe
    predicted_class = np.argmax(predictions, axis=1)

    # Retorne a classe prevista
    return predicted_class

    """
    chamada da função:

    # Carregar o modelo salvo
    loaded_model = load_model('path_to_saved_model.h5')

    # Texto de exemplo para fazer previsões
    input_text = "destarte julgo improcedentes pedidos formulado..."

    # Fazer previsão com o texto de exemplo
    predicted_class = predict_class(loaded_model, input_text, tokenizer, max_review_length)

    # Exibir a classe prevista
    print("Classe prevista:", predicted_class)

    """